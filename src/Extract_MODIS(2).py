# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# Extract_MODIS(2).py
# Created on: 2020-01-28 16:32:57.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: Extract_MODIS(2) <Input_hdf_file> <Subdataset_ID> <Factor> <Output_Coordinate_System> <Mask> <Output_ascii_file>
# Description:
# ---------------------------------------------------------------------------

# Import arcpy module
import arcpy

# Check out any necessary licenses
arcpy.CheckOutExtension("spatial")
arcpy.env.overwriteOutput = True

# Script arguments
Input_hdf_file = arcpy.GetParameterAsText(0)
if Input_hdf_file == '#' or not Input_hdf_file:
    Input_hdf_file = "F:\\Codigo\\GitHub\\MODIS\\data\\ET\\MOD16A2.A2019193.h17v04.006.2019208235358.hdf" # provide a default value if unspecified

Subdataset_ID = arcpy.GetParameterAsText(1)
if Subdataset_ID == '#' or not Subdataset_ID:
    Subdataset_ID = "0" # provide a default value if unspecified

Factor = arcpy.GetParameterAsText(2)
if Factor == '#' or not Factor:
    Factor = "0.0001" # provide a default value if unspecified

Output_Coordinate_System = arcpy.GetParameterAsText(3)
if Output_Coordinate_System == '#' or not Output_Coordinate_System:
    Output_Coordinate_System = "PROJCS['ETRS_1989_UTM_Zone_30N',GEOGCS['GCS_ETRS_1989',DATUM['D_ETRS_1989',SPHEROID['GRS_1980',6378137.0,298.257222101]],PRIMEM['Greenwich',0.0],UNIT['Degree',0.0174532925199433]],PROJECTION['Transverse_Mercator'],PARAMETER['False_Easting',500000.0],PARAMETER['False_Northing',0.0],PARAMETER['Central_Meridian',-3.0],PARAMETER['Scale_Factor',0.9996],PARAMETER['Latitude_Of_Origin',0.0],UNIT['Meter',1.0]]" # provide a default value if unspecified

Mask = arcpy.GetParameterAsText(4)
if Mask == '#' or not Mask:
    Mask = "F:\\Codigo\\GitHub\\MODIS\\data\\dem.asc" # provide a default value if unspecified

Output_ascii_file = arcpy.GetParameterAsText(5)
if Output_ascii_file == '#' or not Output_ascii_file:
    Output_ascii_file = "F:\\Codigo\\GitHub\\MODIS\\output\\ET\\temp\\MOD16A2_A2001001_h17v04.asc" # provide a default value if unspecified

# Local variables:
extracted_hdf = Input_hdf_file
factored_hdf = extracted_hdf
projected_hdf = factored_hdf
extracted_raster = projected_hdf
projected_mask = Output_Coordinate_System

# Process: Extract Subdataset
arcpy.ExtractSubDataset_management(Input_hdf_file, extracted_hdf, Subdataset_ID)

# Process: Raster Calculator
arcpy.gp.RasterCalculator_sa("\"%extracted hdf%\"*float(%Factor%)", factored_hdf)

# Process: Project hdf
arcpy.ProjectRaster_management(factored_hdf, projected_hdf, Output_Coordinate_System, "NEAREST", "463.312716527917 463.3127165275", "", "", "")

# Process: Project mask
arcpy.ProjectRaster_management(Mask, projected_mask, Output_Coordinate_System, "NEAREST", "100 100", "", "", "PROJCS['ETRS_1989_UTM_Zone_30N',GEOGCS['GCS_ETRS_1989',DATUM['D_ETRS_1989',SPHEROID['GRS_1980',6378137.0,298.257222101]],PRIMEM['Greenwich',0.0],UNIT['Degree',0.0174532925199433]],PROJECTION['Transverse_Mercator'],PARAMETER['False_Easting',500000.0],PARAMETER['False_Northing',0.0],PARAMETER['Central_Meridian',-3.0],PARAMETER['Scale_Factor',0.9996],PARAMETER['Latitude_Of_Origin',0.0],UNIT['Meter',1.0]]")

# Process: Extract by Mask
arcpy.gp.ExtractByMask_sa(projected_hdf, projected_mask, extracted_raster)

# Process: Raster to ASCII
arcpy.RasterToASCII_conversion(extracted_raster, Output_ascii_file)

